finished:
raytracer.cpp: rayfraction, reflection
light.cpp: distance attenuation, shadow Attenuation(blocked if intersect any surface(directional)(before light source for point))
trimesh.cpp: intersection(compute bary and t)

graphicalUI.cpp: threading

anti-aliasing

tested: mostly works except it's much brighter than sample solution in box.ray and box_map1.bmp(try different distance attenuation)

material.cpp:   TextureMap::getMappedValue


to-do:
not working for polymesh and sceneblank

debugging k-d tree 

handling command line

trimesh.cpp: set uv, and set material to be bary?

testing

trimesh 1(barycentric material),2,3

light.cpp: shadowAttenuation(multiply transparency of any surface encountered(before the point light))

change UI supersampling to 1 4 9 16

adaptive sampling

tremesh: barycentric: case where the face is vertical to the x-y plane

debug:   https://www.cs.utexas.edu/users/fussell/courses/cs384g/projects/raytracing/samples/index.html 

submit

read code of cubemap

